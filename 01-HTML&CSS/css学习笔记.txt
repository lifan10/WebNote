慕课网css学习笔记（cascading style sheets）
	属于浏览器解释型语言，不同浏览器会有不同
	PC端还在用css2，移动端已经用css3

1.css 样式
      --选择符（选择器） 
      --声明：声明由属性和值组成
      (属性与属性值之间用冒号，多个属性之间用分号)
      
2.注释/* ... */

3.从CSS 样式代码插入的形式来看基本可以分为以下3种：
   他们的优先级：内联式 > 嵌入式 > 外部式  （就近原则）
   --内联式：把css代码直接写在HTML标签中
      在任意HTML标记中使用style属性，在style中使用样式属性 
      <p style="font-size:1px;color:red;border:1px solid blue"></p>
   --嵌入式：使用HTML的style标签写css语法
      <style>
        /*这里只能写css语法*/
	p{
	   font-size:
	   color:
	   background:
	}
      </style>
   --外部式：直接写css语法
     写在一个单独的外部文件中，在<head>内使用<link>标签 
      <link href="style.css" rel="stylesheet" type="text/css" /> 通常写在<head>中
      还有一种不太常用的方式 输入样式表 @import：demo.css 在一个样式中导入另一个样式

4.选择器的分类
   用于找到哪个或者哪些标签
   ---标签选择器
   ---类选择器 **********
       可以写标签名，如p.class 也可以不写标签名 如.class 针对所有类名一样的做同一个样式
       class= 可以写多个值
   ---ID选择器(只针对一个标签做样式，因为id是唯一的) #id ****************  
   ---子选择器
      用于选择指定标签元素的第一代子元素
      注：与类选择器不同，在一个HTML文档中，ID选择器只能使用一次，而且仅一次。
          而类选择器可以使用多次。
   ---后代选择器（关联选择器）
      即加入空格,用于选择指定标签元素下的后辈元素。
      注：子选择器仅是指它的直接后代，或者你可以理解为作用于子元素的第一代后代。
	  而后代选择器是作用于所有子后代元素。后代选择器通过空格来进行选择，
	  而子选择器是通过“>”进行选择。
   ---通用选择器
      通用选择器是功能最强大的选择器，它使用一个（*）号指定，
      它的作用是匹配html中所有标签元素。
   ---伪类选择器
      它允许给html标签的某种状态设置样式,目前CSS2 中只有<a>和<p>标签有多种状态
      例a:link{color:red;}为访问的链接
        a:visited{color:red;}已访问的链接
	a:hover{color:red;}鼠标在链接上
	a:active{color:red;}激活链接
	<p first-letter>
	<p first-line>
        
      上面一行代码就是为 a 标签鼠标滑过的状态设置字体颜色变红。
      这样就会使第一段文字内容中的“胆小如鼠”文字加入鼠标滑过字体颜色变为红色特效。
      其实 :hover 可以放在任意的标签上，比如说 p:hover，但是它们的兼容性也是很不好的，
      所以现在比较常用的还是 a:hover 的组合。
   ---分组选择器
       当你想为html中多个标签元素设置同一个样式时，
       如下代码为右侧代码编辑器中的h1、span标签同时设置字体颜色为红色：
       h1,span，#id,.class{color:red;}

5.CSS的继承，层叠和特殊性
  --继承性：继承是一种规则，它允许样式不仅应用于某个特定html标签元素，而且应用于其后代。
  --特殊性：有的时候我们为同一个元素设置了不同的CSS样式代码，那么元素会启用哪一个CSS样式
            浏览器根据权值来判断使用哪种样式
            权值规则：标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100。
  --层叠性：在html文件中对于同一个元素可以有多个css样式存在，当有相同权重的样式存在时，
            会根据这些css样式的前后顺序来决定，处于最后面的css样式会被应用。
  --重要性：有些特殊的情况需要为某些样式设置具有最高权值，这时候我们可以使用!important来解决。
            p{color:red!important;}


6.CSS格式化排版
  ---文字排版
      --字体 body{font-family:"Microsoft Yahei";}
	 注：不要设置不常用的字体，因为如果用户本地电脑上如果没有安装你设置的字体，
	     就会显示浏览器默认的字体。
	     因为用户是否可以看到你设置的字体样式取决于用户本地电脑上是否安装你设置的字体。
      --字号，颜色
         body{font-size:12px;color:#666}
      --粗体
         p span{font-weight:bold;}
      --斜体
	 p a{font-style:italic;}
	 <p>三年级时，我还是一个<a>胆小如鼠</a>的小女孩。</p>
      --下划线
         p a{text-decoration:underline;}
         <p>三年级时，我还是一个<a>胆小如鼠</a>的小女孩。</p>
      --删除线
          .oldPrice{text-decoration:line-through;}
	  <p>原价：<span class="oldPrice">300</span>元 现价：230 元</p> 
  ---段落排版
      --缩进  p{text-indent:2em;}
      --行间距  p{line-height:1.5em;}
      --中文字间距
      --字母间距  h1{
		    letter-spacing:50px;
		  }
		   h1{
		    word-spacing:50px;
		  }
      --对齐
            div{text-align:center;}

7.CSS盒模型
   7.1在CSS中，html中的标签元素大体被分为三种不同的类型：
      块状元素、内联元素(又叫行内元素)和内联块状元素。
	--常用的块状元素有：
           <div>、<p>、<h1>...<h6>、<ol>、<ul>、<dl>、<table>、
	   <address>、<blockquote> 、<form>
	   特点 1、每个块级元素都从新的一行开始，并且其后的元素也另起一行。
		2、元素的高度、宽度、行高以及顶和底边距都可设置。
		3、元素宽度在不设置的情况下，是它本身父容器的100%（和父元素的宽度一致），
		   除非设定一个宽度。
	--常用的内联元素有：
	   <a>、<span>、<br>、<i>、<em>、<strong>、<label>、<q>、<var>、<cite>、<code>
	   特点：1、和其他元素都在一行上；
	         2、元素的高度、宽度及顶部和底部边距不可设置；
                 3、元素的宽度就是它包含的文字或图片的宽度，不可改变。
	--常用的内联块状元素有：
           <img>、<input>
    7.2盒模型
        <div><ul><ol><p><h><table>都具有盒子模型的特征
        padding 盒子与内容之间的距离
	margin 盒子与盒子之间的距离
	border 盒子的边框
	    缩写为
	    div{					
	        border:2px  solid  red;
		}					div{
							    border-width:2px;
						            border-style:solid;
							    border-color:red;
							}
            单独设置下标签
	     border-bottom:1px dotted #ccc
	     border-top:1px solid red;
	     border-right:1px solid red; 
	     border-left:1px solid red;
     7.3宽度和高度
        盒模型宽度和高度和我们平常所说的物体的宽度和高度理解是不一样的，
	css内定义的宽（width）和高（height），指的是填充以里的内容范围。
	因此一个元素实际宽度（盒子的宽度）=左边界+左边框+左填充+内容宽度+右填充+右边框+右边界。
     7.4填充
        元素内容与边框之间是可以设置距离的
        div{
	   padding-top:20px;
	   padding-right:10px;
	   padding-bottom:15px;
	   padding-left:30px;
	}
	分别为上右下左，顺时针
	可以简写为div{padding:20px 10px 15px 30px;} 上右下左
	          div{padding:20px 10px 15px ;} 上 左右 下
		  div{padding:20px 10px ;} 上下 左右 
		  div{padding:20px;} 四边都是20 个像素
     7.5边界
        元素与其它元素之间的距离可以使用边界

8.CSS布局模型
    --流动模型 Flow
      是默认的网页布局模式。
      也就是说网页在默认状态下的 HTML 网页元素都是根据流动模型来分布网页内容的。
    --浮动模型 Float
      任何元素在默认情况下是不能浮动的，但可以用 CSS 定义为浮动，
      如 div、p、table、img 等元素都可以被定义为浮动。
	      #div1{float:left;}
	      #div2{float:right;}
	      float:right; float:left;
    --层模型 Layer
        1、绝对定位(position: absolute):相对于其最接近的一个具有定位属性的父包含块进行绝对定位。
	    如果不存在这样的包含块，则相对于body元素，即相对于浏览器窗口。
	    position:absolute;
	    left:100px;
	    top:50px;
	2、相对定位(position: relative):确定元素在正常文档流中的偏移位置
	    position:relative;
	    left:100px;
	    top:50px;
	3、固定定位(position: fixed):fixed：表示固定定位，与absolute定位类型类似，
	   但它的相对移动的坐标是视图（屏幕内的网页窗口）本身。
	   由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化
	    position:fixed;
	    left:100px;
	    top:50px;
    --relative和absolute结合使用
      遵守的规范：1、参照定位的元素必须是相对定位元素的前辈元素：
		  2、参照定位的元素必须加入position:relative;
		  3、定位元素加入position:absolute，
		     便可以使用top、bottom、left、right来进行偏移定位了。

9.CSS代码缩写，占用更少的带宽
        body{
	    font-style:italic;
	    font-variant:small-caps; 
	    font-weight:bold; 
	    font-size:12px; 
	    line-height:1.5em; 
	    font-family:"宋体",sans-serif;
	}
        可以简写为：
	body{
	    font:italic  small-caps  bold  12px/1.5em  "宋体",sans-serif;
	}
10.单位和值
    --颜色值 
      英文命令颜色：p{color:red;}
      RGB颜色：p{color:rgb(133,45,200);}  red green blue
               每一项的值可以是 0~255 之间的整数，也可以是 0%~100% 的百分数。
      十六进制颜色:p{color:#00ffff;}
    --长度值
      像素：指的是显示器上的小点（CSS规范中假设“90像素=1英寸”）。
            实际情况是浏览器会使用显示器的实际像素值有关
      em：就是本元素给定字体的 font-size 值，如果元素的 font-size 为 14px ，
          那么 1em = 14px；如果 font-size 为 18px，那么 1em = 18px。
      百分比：p{font-size:12px;line-height:130%}设置行高为字体的130%
    --CSS指定URL地址方式：
      body{background-image:url}
      body{background-image:url(bg,jpg)}
      body{background-image:url('bg,jpg')}
      body{background-image:url("bg,jpg")}

布尔视频css学习笔记
1.z-index：10px  层数较多时使用这个属性来控制哪个在上面
2.DIV和CSS对页面布局的优势
  --表现和内容相分离
  --代码简洁，提高页面浏览速度
  --易于维护和改版
  --提高搜索引擎对网页的索引效率
3.无意义的标签（没有任何样式）
  --<div>大区块
  --<span>小区域
4.不同浏览器不兼容
  4.1在使用了高度和宽度时，又使用了padding和margin时需要解决不同浏览器之间的兼容性问题

    --非IE 宽高指盒子里实际内容的宽高 ;
    --IE   宽高指边框外的宽高; 并且忽略!important的作用
         (所以如果不解决这个问题IE会小一些)
     
	     解决方式：
	     {
	       width:300px!important;
	       width:250px; 300-5-5-20-20=250
	       height:300px!important;
	       height:270px;300-5-5-10-10=270
	       border:5px;
	       padding:10px 20px;
	       margin:30px;
	     }
  4.2 在IE中小于18px时按18px来算，大于18px时按指定的数来算
       解决方式：overflow:hidden;
  4.3 在指定高度时标准的盒子内容不会撑开
       解决方式：不指定外层高度
     
5.和布局有关的CSS属性
  --position
    加上这个属性之后就脱离了文档流的规律，而是按照定义的属性布局
    absolute
    relative
    fixed 注：在IE浏览器中必须写上<!DOCTYPE HTML >强制IE按标准的HTML fixed才能起到作用
  --z-index
  --top
  --left
  --text-align 横向排列 左中右
  --line-height 垂直方向（垂直居中）
  --display 显示属性
	    display:block 以块状显示 添加换行符
	    display:inline内联显示 删除换行符
	    display:none 隐藏（位置也没了）
  --visibility 针对嵌套层的设置
	    visibility:inherit 继承父层的可见性
	    visibility:visible 无论父层是否可见，子层都可见
            visibility:hidden 无论父层是否可见，子层都隐藏
  --overflow 超出部分隐藏
             overflow:hidden
             overflow:auto
	     overflow:scroll
  --float 
     会自动换行，尽量往上放，浏览器没空间了再换行

   注：文档流一层
       漂浮的一层 在文档流之上
       定位的一层
       （IE中漂不漂在一层）
--clear 指定是否允许有元素漂浮在它的旁边
       clear:left
       clear:right
       clear:both
6.一些技巧
  登录界面
  注册界面的宽度控制不好时，在<div>里嵌套一个<div>
   
7.遇到的问题
    #main.right浏览器不识别这种写法
    改为 .right 却可以了